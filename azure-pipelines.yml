# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solutionAsp: 'app-service-web-dotnet-get-started/**/*.sln'
  solutionCore: 'AzureTestProject/**/RoundTheCode.AzureTestProject.sln'
  projectCore: 'AzureTestProject/**/RoundTheCode.AzureTestProject.csproj'


steps:
- task: NuGetToolInstaller@1
  name: 'NuGetToolInstaller'

- task: NuGetCommand@2
  name: 'restoreAspNetProject'
  inputs:
    restoreSolution: '$(solutionAsp)'

- task: VSBuild@1
  name: 'BuildAspNetProject'
  inputs:
    solution: '$(solutionAsp)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  name: 'restoreDotNetCoreProject'
  displayName: 'NuGet restore packages'
  inputs:
    command: 'restore'
    restoreSolution: '$(solutionCore)'
    feedsToUse: 'select'  

- task: DotNetCoreCLI@2
  name: 'Publish'
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(projectCore)'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false


